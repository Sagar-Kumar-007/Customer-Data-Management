// <auto-generated />
using System;
using DataTrackr_Web_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataTrackr_API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230515060557_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataTrackr_API.Models.Logs", b =>
                {
                    b.Property<int>("logId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("logId"));

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("logId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DataTrackr_Web_API.Models.Account", b =>
                {
                    b.Property<string>("Acc_email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Acc_revenue")
                        .HasColumnType("float");

                    b.Property<string>("Customer_email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EstYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locationaddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Locationlatitude")
                        .HasColumnType("float");

                    b.Property<double?>("Locationlongitude")
                        .HasColumnType("float");

                    b.Property<string>("aname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Acc_email");

                    b.HasIndex("Customer_email");

                    b.HasIndex("Locationlatitude", "Locationlongitude", "Locationaddress");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DataTrackr_Web_API.Models.Coordinates", b =>
                {
                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("latitude", "longitude", "address");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("DataTrackr_Web_API.Models.Customer", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cname")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("headquaters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataTrackr_Web_API.Models.Account", b =>
                {
                    b.HasOne("DataTrackr_Web_API.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("Customer_email");

                    b.HasOne("DataTrackr_Web_API.Models.Coordinates", "Location")
                        .WithMany()
                        .HasForeignKey("Locationlatitude", "Locationlongitude", "Locationaddress");

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DataTrackr_Web_API.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
